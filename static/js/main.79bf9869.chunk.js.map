{"version":3,"sources":["logo.svg","helpers/transformNumber.js","components/Nation/Nation.js","helpers/transformTime.js","assets/search.png","helpers/quickShort.js","pages/index.js","App.js","reportWebVitals.js","index.js"],"names":["transform","num","toString","replace","NationMemorized","React","memo","time","country","index","onTop","console","log","updated","className","width","height","src","countryInfo","flag","alt","moment","fromNow","cases","swap","items","leftIndex","rightIndex","temp","quickSort","left","right","length","pivot","Math","floor","i","j","partition","MainMemo","useState","loading","setLoading","totalCase","setTotalCase","totalDeaths","setTotalDeath","totalRecover","setTotalRecover","listNation","setListNation","searchText","setSearchText","fetchData","axios","get","then","res","data","result","reverse","total","reduce","item","totalD","deaths","totalRCV","recovered","useEffect","setInterval","list","useMemo","filter","el","toLowerCase","includes","slice","map","Search","onChange","e","target","value","placeholder","find","iso2","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79bf9869.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const transform = (num) => {\n  return num.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n}","import React from 'react';\nimport { TransformTime} from '../../helpers/transformTime';\nimport {transform} from '../../helpers/transformNumber';\nimport './style.css'\n\nconst NationMemorized = React.memo( function Nation({country, index, onTop}) {\n  console.log(country.updated)\n  return <div className={`nationItem ${onTop ? 'onTop' : ''}`}>\n      <div className=\"inforNation\">\n        {onTop ? '' : <p className=\"index\">{index}</p>}\n      <img className=\"flagNation\" width=\"60\" height=\"40\" src={country.countryInfo.flag} alt={'Flag '+country.country} />\n      <div className=\"nameContainer\">\n        <label className=\"nameNation\">{country.country}</label>\n        <label className=\"lastUpdate\">{TransformTime(country.updated)}</label>\n      </div>\n      </div>\n    <div className=\"caseNation\">\n      {transform(country.cases)}\n    </div>\n  </div>\n})\nexport default NationMemorized","import moment from 'moment';\n\nexport function TransformTime(time) {\n  return moment(time).fromNow()\n}","export default __webpack_public_path__ + \"static/media/search.7576ac8c.png\";","function swap(items, leftIndex, rightIndex){\n    var temp = items[leftIndex];\n    items[leftIndex] = items[rightIndex];\n    items[rightIndex] = temp;\n}\n\nfunction partition(items, left, right) {\n    var pivot   = items[Math.floor((right + left) / 2)]['cases'],\n        i       = left, \n        j       = right; \n    while (i <= j) {\n        while (items[i]['cases'] < pivot) {\n            i++;\n        }\n        while (items[j]['cases'] > pivot) {\n            j--;\n        }\n        if (i <= j) {\n            swap(items, i, j); \n            i++;\n            j--;\n        }\n    }\n    return i;\n}\n\nexport function quickSort(items, left, right) {\n    var index;\n    if (items.length > 1) {\n        index = partition(items, left, right); \n        if (left < index - 1) { \n            quickSort(items, left, index - 1);\n        }\n        if (index < right) {\n            quickSort(items, index, right);\n        }\n    }\n    return items;\n}\n","\nimport React, { useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\n\nimport Nation from '../components/Nation/Nation';\n\nimport Search from '../assets/search.png'\n\nimport \"../styles/index.css\"\nimport { transform } from '../helpers/transformNumber';\nimport { quickSort } from '../helpers/quickShort';\n\n const MainMemo =  function Main() {\n  const [loading, setLoading] = useState(true);\n  const [totalCase, setTotalCase] = useState(null);\n  const [totalDeaths, setTotalDeath] = useState(null);\n  const [totalRecover, setTotalRecover] = useState(null);\n  const [listNation, setListNation] = useState([]);\n  const [searchText, setSearchText] = useState('');\n\n\n  const fetchData = () => {\n   \n     axios.get('https://disease.sh/v3/covid-19/countries').then(res => {\n      const temp = [...res.data];\n      const result = quickSort(temp, 0, temp.length - 1).reverse();     \n      setListNation(result) \n      let total = res.data.reduce((total, item) => {\n        return total + item.cases\n      }, 0)\n      let totalD = res.data.reduce((total, item) => {\n        return total + item.deaths\n      }, 0)\n      let totalRCV = res.data.reduce((total, item) => {\n        return total + item.recovered\n      }, 0)\n      setTotalRecover(totalRCV);\n      setTotalDeath(totalD)\n      setTotalCase(total)\n      \n    }, 0).then(\n      () => {\n        setLoading(false)\n      }\n    )\n  }\n\n\n   useEffect(() => {\n   \n    fetchData()\n    setInterval(() => {\n      fetchData()\n    }, 180000)\n  }, [])\n\n  \n  const onChangeSearchText = (e) => {\n    setSearchText(e.target.value);   \n  }\n\n  const list = useMemo(() => {\n    return <>\n      {listNation.length > 0 && listNation.filter((el) => {\n          return el.country.toLowerCase().includes(searchText.toLowerCase())\n        }).slice(0, 9).map((el, index) => {\n          return <Nation country={el} index={index+1} key={el.country}/>\n        })}\n    </>\n  }, [listNation, searchText])\n  if(loading) return <div>loading</div>\n  return <div className=\"main\">\n      <div className=\"infor\">\n        <div className=\"totalCase\">\n          {totalCase && transform(totalCase)}\n        </div>\n        <div className=\"deathsAndRecover\">\n          <div className=\"deaths\">{totalDeaths && transform(totalDeaths)}\n            <label className=\"label\">DEATHS</label>\n          </div>\n          <div className=\"recovered\"> {totalRecover && transform(totalRecover)} <label className=\"label\">RECOVERIES</label></div>\n        </div>\n      </div>\n      <div className=\"inputContainer\">\n        <img className=\"image\" width=\"20\" height=\"20\" src={Search} alt=\"search\" />\n        <input onChange={onChangeSearchText}  className=\"input\" placeholder=\"Search 667 regions...\" />\n      </div>\n      <div className=\"listNation\">\n          <Nation country={listNation.find((el ) => el.country === \"VietNam\" || el.countryInfo.iso2 === \"VN\")}  onTop={true} />\n          {list}\n      </div>\n  </div>\n}\n\nexport default React.memo(MainMemo)","import logo from './logo.svg';\nimport './App.css';\nimport Main from './pages';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}